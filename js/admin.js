document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const session = getSession();
    if (!session.isAuthenticated || session.role !== 'admin') {
        alert('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!');
        window.location.href = 'login.html';
        return;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    initAdminPanel();

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
    loadAdminContent('products');
});

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 */
function initAdminPanel() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
    document.getElementById('admin-products').addEventListener('click', function(e) {
        e.preventDefault();
        loadAdminContent('products');
        setActiveTab(this);
    });

    document.getElementById('admin-orders').addEventListener('click', function(e) {
        e.preventDefault();
        loadAdminContent('orders');
        setActiveTab(this);
    });

    document.getElementById('admin-users').addEventListener('click', function(e) {
        e.preventDefault();
        loadAdminContent('users');
        setActiveTab(this);
    });

    // –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
    document.querySelector('.btn-logout').addEventListener('click', logout);
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 * @param {string} section - –†–∞–∑–¥–µ–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (products|orders|users)
 */
function loadAdminContent(section) {
    const contentDiv = document.getElementById('admin-content');
    contentDiv.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';

    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç AJAX-–∑–∞–ø—Ä–æ—Å)
    setTimeout(() => {
        switch (section) {
            case 'products':
                contentDiv.innerHTML = getProductsContent();
                initProductsTable();
                break;
            case 'orders':
                contentDiv.innerHTML = getOrdersContent();
                initOrdersTable();
                break;
            case 'users':
                contentDiv.innerHTML = getUsersContent();
                initUsersTable();
                break;
        }
    }, 500);
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
 * @param {HTMLElement} tabElement - –≠–ª–µ–º–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏
 */
function setActiveTab(tabElement) {
    // –£–¥–∞–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
    document.querySelectorAll('.admin-nav a').forEach(tab => {
        tab.classList.remove('active');
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ
    tabElement.classList.add('active');
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–¢–æ–≤–∞—Ä—ã"
 */
function getProductsContent() {
    return `
        <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏</h2>
        <div class="admin-toolbar">
            <button class="btn btn-primary" onclick="showAddProductForm()">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</button>
            <div class="admin-search">
                <input type="text" id="product-search" placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤...">
                <button class="btn btn-search">–ù–∞–π—Ç–∏</button>
            </div>
        </div>
        <div class="admin-table-container">
            <table id="products-table" class="admin-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                        <th>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                        <th>–¶–µ–Ω–∞</th>
                        <th>–û—Å—Ç–∞—Ç–æ–∫</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                </tbody>
            </table>
        </div>
        <div id="product-form-modal" class="modal" style="display:none;">
            <!-- –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ -->
        </div>
    `;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–ó–∞–∫–∞–∑—ã"
 */
function getOrdersContent() {
    return `
        <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏</h2>
        <div class="admin-filters">
            <select id="order-status-filter">
                <option value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                <option value="new">–ù–æ–≤—ã–µ</option>
                <option value="processing">–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</option>
                <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ</option>
                <option value="cancelled">–û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ</option>
            </select>
            <input type="date" id="order-date-filter">
        </div>
        <div class="admin-table-container">
            <table id="orders-table" class="admin-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
                        <th>–î–∞—Ç–∞</th>
                        <th>–°—É–º–º–∞</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                </tbody>
            </table>
        </div>
    `;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
 */
function getUsersContent() {
    return `
        <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h2>
        <div class="admin-toolbar">
            <button class="btn btn-primary" onclick="showAddUserForm()">–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</button>
            <div class="admin-search">
                <input type="text" id="user-search" placeholder="–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...">
                <button class="btn btn-search">–ù–∞–π—Ç–∏</button>
            </div>
        </div>
        <div class="admin-table-container">
            <table id="users-table" class="admin-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>–õ–æ–≥–∏–Ω</th>
                        <th>Email</th>
                        <th>–†–æ–ª—å</th>
                        <th>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                </tbody>
            </table>
        </div>
        <div id="user-form-modal" class="modal" style="display:none;">
            <!-- –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -->
        </div>
    `;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
 */
function initProductsTable() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
    const products = [
        { id: 1, name: '–ì–∏—Ç–∞—Ä–∞ Fender FA-125', category: '–ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ –≥–∏—Ç–∞—Ä—ã', price: 12500, stock: 5 },
        { id: 2, name: '–ì–∏—Ç–∞—Ä–∞ Yamaha C40', category: '–ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ –≥–∏—Ç–∞—Ä—ã', price: 15800, stock: 3 },
        { id: 3, name: 'Gibson Les Paul Standard', category: '–≠–ª–µ–∫—Ç—Ä–æ–≥–∏—Ç–∞—Ä—ã', price: 120000, stock: 2 },
        { id: 4, name: 'Yamaha PSR-E373', category: '–°–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä—ã', price: 25000, stock: 7 }
    ];

    const tbody = document.querySelector('#products-table tbody');
    tbody.innerHTML = products.map(product => `
        <tr>
            <td>${product.id}</td>
            <td>${product.name}</td>
            <td>${product.category}</td>
            <td>${product.price} —Ä—É–±.</td>
            <td>${product.stock}</td>
            <td class="actions">
                <button class="btn btn-edit" onclick="editProduct(${product.id})">‚úèÔ∏è</button>
                <button class="btn btn-delete" onclick="deleteProduct(${product.id})">üóëÔ∏è</button>
            </td>
        </tr>
    `).join('');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤
 */
function initOrdersTable() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
    const orders = [
        { id: 1001, user: 'user1', date: '2023-05-15', amount: 28500, status: 'completed' },
        { id: 1002, user: 'user2', date: '2023-05-16', amount: 120000, status: 'processing' },
        { id: 1003, user: 'admin', date: '2023-05-17', amount: 25000, status: 'new' }
    ];

    const tbody = document.querySelector('#orders-table tbody');
    tbody.innerHTML = orders.map(order => `
        <tr>
            <td>${order.id}</td>
            <td>${order.user}</td>
            <td>${order.date}</td>
            <td>${order.amount} —Ä—É–±.</td>
            <td><span class="status-${order.status}">${getStatusText(order.status)}</span></td>
            <td class="actions">
                <button class="btn btn-view" onclick="viewOrderDetails(${order.id})">üëÅÔ∏è</button>
                <button class="btn btn-edit" onclick="editOrderStatus(${order.id})">‚úèÔ∏è</button>
            </td>
        </tr>
    `).join('');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    document.getElementById('order-status-filter').addEventListener('change', filterOrders);
    document.getElementById('order-date-filter').addEventListener('change', filterOrders);
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
function initUsersTable() {
    const users = getUsers();
    const tbody = document.querySelector('#users-table tbody');
    tbody.innerHTML = users.map(user => `
        <tr>
            <td>${users.indexOf(user) + 1}</td>
            <td>${user.username}</td>
            <td>${user.email}</td>
            <td>${user.role === 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</td>
            <td>${new Date(user.regDate).toLocaleDateString()}</td>
            <td class="actions">
                <button class="btn btn-edit" onclick="editUser('${user.username}')">‚úèÔ∏è</button>
                ${user.role !== 'admin' ? `<button class="btn btn-delete" onclick="deleteUser('${user.username}')">üóëÔ∏è</button>` : ''}
            </td>
        </tr>
    `).join('');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞
    document.getElementById('user-search').addEventListener('input', searchUsers);
}

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */

function getStatusText(status) {
    const statuses = {
        'new': '–ù–æ–≤—ã–π',
        'processing': '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
        'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω',
        'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
    };
    return statuses[status] || status;
}

function filterOrders() {
    const statusFilter = document.getElementById('order-status-filter').value;
    const dateFilter = document.getElementById('order-date-filter').value;
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    console.log('–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ:', statusFilter, dateFilter);
}

function searchUsers() {
    const searchTerm = document.getElementById('user-search').value.toLowerCase();
    const rows = document.querySelectorAll('#users-table tbody tr');
    
    rows.forEach(row => {
        const username = row.cells[1].textContent.toLowerCase();
        const email = row.cells[2].textContent.toLowerCase();
        if (username.includes(searchTerm) || email.includes(searchTerm)) {
            row.style.display = '';
        } else {
            row.style.display = 'none';
        }
    });
}

/**
 * –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏
 */

function showAddProductForm() {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
    alert('–§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –±—É–¥–µ—Ç –∑–¥–µ—Å—å');
}

function editProduct(id) {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
    console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ID:', id);
}

function deleteProduct(id) {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?')) {
        console.log('–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ID:', id);
    }
}

/**
 * –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–∫–∞–∑–∞–º–∏
 */

function viewOrderDetails(id) {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
    console.log('–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞ ID:', id);
}

function editOrderStatus(id) {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
    console.log('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ ID:', id);
}

/**
 * –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
 */

function showAddUserForm() {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    alert('–§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –∑–¥–µ—Å—å');
}

function editUser(username) {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', username);
}

function deleteUser(username) {
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username}?`)) {
        const users = getUsers();
        const updatedUsers = users.filter(u => u.username !== username);
        localStorage.setItem('music_shop_users', JSON.stringify(updatedUsers));
        initUsersTable(); // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML
window.editProduct = editProduct;
window.deleteProduct = deleteProduct;
window.viewOrderDetails = viewOrderDetails;
window.editOrderStatus = editOrderStatus;
window.showAddProductForm = showAddProductForm;
window.showAddUserForm = showAddUserForm;
window.editUser = editUser;
window.deleteUser = deleteUser;
window.searchUsers = searchUsers;
window.filterOrders = filterOrders;